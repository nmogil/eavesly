# ============================================================================
# Pennie Call QA System - Environment Configuration
# ============================================================================
# 
# This file contains all environment variables used by the application.
# Copy this file to .env and fill in the actual values.
#
# SECURITY NOTE: Never commit the actual .env file to version control!
# ============================================================================

# ============================================================================
# REQUIRED API KEYS
# ============================================================================
# These API keys are mandatory for the application to function

# OpenRouter API key for LLM model access
# Get your key from: https://openrouter.ai/
OPENROUTER_API_KEY=your_openrouter_api_key_here

# PromptLayer API key for prompt template management  
# Get your key from: https://promptlayer.com/
PROMPTLAYER_API_KEY=your_promptlayer_api_key_here

# Internal API key for securing your endpoints
# Generate a secure random string (minimum 8 characters)
# Example: openssl rand -hex 16
INTERNAL_API_KEY=your_secure_internal_api_key_here

# ============================================================================
# REQUIRED SUPABASE CONFIGURATION
# ============================================================================
# Supabase is used for data storage and user management

# Your Supabase project URL
# Format: https://your-project-id.supabase.co
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous/public key (safe to expose in frontend)
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Supabase service role key (KEEP SECRET - admin privileges)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Environment: development, staging, or production
# Affects logging format, debug mode, and other behaviors
ENVIRONMENT=development

# Port for the FastAPI application (1024-65535)
PORT=3000

# Logging level: debug, info, warning, error, critical
# Auto-adjusted based on ENVIRONMENT if not specified
LOG_LEVEL=info

# Debug mode (true/false) - auto-set based on ENVIRONMENT
# Set to true to enable detailed error messages and auto-reload
DEBUG=false

# ============================================================================
# MODEL CONFIGURATION
# ============================================================================
# Configuration for LLM model usage and behavior

# OpenRouter model to use for evaluations
# Popular options:
# - openai/gpt-4o-2024-08-06 (recommended)
# - openai/gpt-4-turbo
# - anthropic/claude-3-sonnet
OPENROUTER_MODEL=openai/gpt-4o-2024-08-06

# Maximum number of retry attempts for failed LLM calls (1-10)
MAX_RETRIES=3

# Timeout for LLM API calls in seconds (5-300)
TIMEOUT_SECONDS=30

# ============================================================================
# OPTIONAL PERFORMANCE CONFIGURATION
# ============================================================================
# These settings have sensible defaults but can be tuned for your needs

# Maximum number of concurrent evaluation tasks (1-20)
# Higher values = faster batch processing but more resource usage
MAX_CONCURRENT_EVALUATIONS=5

# Cache TTL for prompt templates in seconds (60-3600)
# How long to cache templates before fetching fresh ones
CACHE_TTL_SECONDS=300

# ============================================================================
# MONITORING & HEALTH CHECK CONFIGURATION  
# ============================================================================

# Health check timeout in seconds (1-30)
HEALTH_CHECK_TIMEOUT=5

# Enable metrics collection and exposure (true/false)
ENABLE_METRICS=true

# ============================================================================
# DEVELOPMENT ONLY SETTINGS
# ============================================================================
# These settings are only used in development environment

# Enable detailed SQL query logging (development only)
# LOG_SQL_QUERIES=true

# Enable API request/response logging (development only)  
# LOG_API_REQUESTS=true

# ============================================================================
# PRODUCTION ONLY SETTINGS
# ============================================================================
# These settings are typically only used in production

# Enable log file output (automatically enabled in production)
# ENABLE_FILE_LOGGING=true

# Log file path (relative to application root)
# LOG_FILE_PATH=logs/app.log

# Maximum log file size before rotation (in bytes)
# LOG_FILE_MAX_SIZE=10485760

# Number of backup log files to keep
# LOG_FILE_BACKUP_COUNT=5

# ============================================================================
# EXAMPLE CONFIGURATIONS BY ENVIRONMENT
# ============================================================================

# DEVELOPMENT EXAMPLE:
# ENVIRONMENT=development
# LOG_LEVEL=debug
# DEBUG=true
# ENABLE_METRICS=false

# STAGING EXAMPLE:
# ENVIRONMENT=staging  
# LOG_LEVEL=info
# DEBUG=false
# ENABLE_METRICS=true

# PRODUCTION EXAMPLE:
# ENVIRONMENT=production
# LOG_LEVEL=info
# DEBUG=false
# ENABLE_METRICS=true
# MAX_CONCURRENT_EVALUATIONS=10
# TIMEOUT_SECONDS=45

# ============================================================================
# GETTING STARTED
# ============================================================================
# 
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Fill in the required API keys and Supabase configuration
#
# 3. Adjust optional settings as needed for your environment
#
# 4. Test your configuration:
#    python -c "from app.config import settings; print('Config loaded successfully!')"
#
# 5. Start the application:
#    uvicorn app.main:app --reload
#
# ============================================================================